# ==============================================================================
# Auto-functions with parameters using return type 'decltype(auto)'
# ==============================================================================
Given cpp (auto-function with parameters using return type 'decltype(auto)'):
  template<class F, class... Args>
  decltype(auto) PerfectForward(F fun, Args&&... args)
  {
    //
  }

Do (trigger doge):
  \<C-d>

Expect cpp (generated comment with @brief, @tparam, @param and @return tags):
  /**
   * @brief [TODO:description]
   *
   * @tparam F [TODO:description]
   * @tparam Args [TODO:description]
   * @param fun [TODO:description]
   * @param args [TODO:description]
   * @return [TODO:description]
   */
  template<class F, class... Args>
  decltype(auto) PerfectForward(F fun, Args&&... args)
  {
    //
  }

# ==============================================================================
# Auto-functions with parameters with type hints using return type 'auto'
# ==============================================================================
Given cpp (auto-function with parameters with advanced type hints using return type 'auto'):
  template<class T, class U>
  auto add(T t, U u)
  {
    //
  }

Do (trigger doge):
  \<C-d>

Expect cpp (generated comment with @brief, @tparam, @param and @return tags):
  /**
   * @brief [TODO:description]
   *
   * @tparam T [TODO:description]
   * @tparam U [TODO:description]
   * @param t [TODO:description]
   * @param u [TODO:description]
   * @return [TODO:description]
   */
  template<class T, class U>
  auto add(T t, U u)
  {
    //
  }
